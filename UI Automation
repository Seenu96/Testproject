UI Automation-


package org;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;
import org.testng.annotations.AfterSuite;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

public class LoginFeature {

    WebDriver driver;

    @BeforeSuite
    public void setup() {
        driver = new ChromeDriver();
        driver.get("https://www.saucedemo.com/");
        driver.manage().window().maximize();
    }

    @Test(dataProvider = "loginData")
    public void loginWithDifferentUsers(String username, String password, boolean isLoginExpected) {
        WebElement uname = driver.findElement(By.id("user-name"));
        uname.clear();
        uname.sendKeys(username);

        WebElement pwd = driver.findElement(By.id("password"));
        pwd.clear(); // Clear previous input
        pwd.sendKeys(password);

        WebElement loginBtn = driver.findElement(By.id("login-button"));
        loginBtn.click();

        if (isLoginExpected) {
            String currentUrl = driver.getCurrentUrl();
            Assert.assertEquals(currentUrl, "https://www.saucedemo.com/inventory.html",
                    "Login failed for valid user: " + username);
        } else {
            WebElement errorMessage = driver.findElement(By.cssSelector("h3[data-test='error']"));
            Assert.assertTrue(errorMessage.isDisplayed(), "Error message not displayed for invalid user: " + username);
        }


        driver.get("https://www.saucedemo.com/");
    }

    @DataProvider(name = "loginData")
    public Object[][] getData() {
        return new Object[][]{
                {"standard_user", "secret_sauce", true},
                {"locked_out_user", "secret_sauce", true},
                {"problem_user", "secret_sauce", true},
                {"performance_glitch_user", "secret_sauce", true},
                {"error_user", "secret_sauce", true},
                {"visual_user", "secret_sauce", true}
        };
    }

    @AfterSuite
    public void teardown() {
        driver.quit();
    }
}

